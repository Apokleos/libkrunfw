From 5d929eca46d48c02ce43694f6289a45220cfef78 Mon Sep 17 00:00:00 2001
From: Sergio Lopez <slp@redhat.com>
Date: Mon, 16 May 2022 15:47:50 +0200
Subject: [PATCH 01/15] krunfw: Don't panic when init dies

In libkrun, the isolated process runs as PID 1. When it exits,
trigger an orderly reboot instead of panic'ing.

Also, silence reboot messages for the moment. Eventually we should
play with the printk levels instead.

Signed-off-by: Sergio Lopez <slp@redhat.com>
---
 kernel/exit.c   | 5 +++++
 kernel/reboot.c | 2 ++
 2 files changed, 7 insertions(+)

diff --git a/kernel/exit.c b/kernel/exit.c
index 84021b24f79e..1021ee02a942 100644
--- a/kernel/exit.c
+++ b/kernel/exit.c
@@ -66,6 +66,7 @@
 #include <linux/io_uring.h>
 #include <linux/kprobes.h>
 #include <linux/rethook.h>
+#include <linux/reboot.h>
 
 #include <linux/uaccess.h>
 #include <asm/unistd.h>
@@ -761,8 +762,12 @@ void __noreturn do_exit(long code)
 		 * immediately to get a useable coredump.
 		 */
 		if (unlikely(is_global_init(tsk)))
+#ifdef VERBOSE_LIBKRUN
 			panic("Attempted to kill init! exitcode=0x%08x\n",
 				tsk->signal->group_exit_code ?: (int)code);
+#else
+            orderly_reboot();
+#endif
 
 #ifdef CONFIG_POSIX_TIMERS
 		hrtimer_cancel(&tsk->signal->real_timer);
diff --git a/kernel/reboot.c b/kernel/reboot.c
index 3c35445bf5ad..496bf5010dd9 100644
--- a/kernel/reboot.c
+++ b/kernel/reboot.c
@@ -256,10 +256,12 @@ void kernel_restart(char *cmd)
 	kernel_restart_prepare(cmd);
 	migrate_to_reboot_cpu();
 	syscore_shutdown();
+#ifdef VERBOSE_LIBKRUN
 	if (!cmd)
 		pr_emerg("Restarting system\n");
 	else
 		pr_emerg("Restarting system with command '%s'\n", cmd);
+#endif
 	kmsg_dump(KMSG_DUMP_SHUTDOWN);
 	machine_restart(cmd);
 }
-- 
2.37.3

